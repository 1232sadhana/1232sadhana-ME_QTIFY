{"ast":null,"code":"var _jsxFileName = \"/workspaces/1232sadhana-ME_QTIFY/src/components/Card/Card.jsx\";\nimport React from \"react\";\nimport \"./Card.css\";\n\n/**\n * Represents a card component.\n * Renders a card based on the provided data and type.\n * @param {Object} data - The data object containing information for the card.\n * @param {string} type - The type of the card.\n * @returns {JSX.Element|null} The rendered card component or null if the type is not recognized.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  data,\n  type\n}) => {\n  switch (type) {\n    case \"normal\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Album_Cont\",\n        id: data.id,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Album_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Album_card_image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.image,\n              alt: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Album_card_text\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [data.follows, \" Follows\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Album_title\",\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    default:\n      return null;\n  }\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","data","type","className","id","children","src","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","follows","_c","$RefreshReg$"],"sources":["/workspaces/1232sadhana-ME_QTIFY/src/components/Card/Card.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\n/**\n * Represents a card component.\n * Renders a card based on the provided data and type.\n * @param {Object} data - The data object containing information for the card.\n * @param {string} type - The type of the card.\n * @returns {JSX.Element|null} The rendered card component or null if the type is not recognized.\n */\nconst Card = ({ data, type }) => {\n  switch (type) {\n    case \"normal\":\n      return (\n        <div className=\"Album_Cont\" id={data.id}>\n          <div className=\"Album_card\">\n            <div className=\"Album_card_image\">\n              <img src={data.image} alt={data.title} />\n            </div>\n            <div className=\"Album_card_text\">\n              <h3>{data.follows} Follows</h3>\n            </div>\n          </div>\n          <h3 className=\"Album_title\">{data.title}</h3>\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default Card;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,KAAK;EAC/B,QAAQA,IAAI;IACV,KAAK,QAAQ;MACX,oBACEH,OAAA;QAAKI,SAAS,EAAC,YAAY;QAACC,EAAE,EAAEH,IAAI,CAACG,EAAG;QAAAC,QAAA,gBACtCN,OAAA;UAAKI,SAAS,EAAC,YAAY;UAAAE,QAAA,gBACzBN,OAAA;YAAKI,SAAS,EAAC,kBAAkB;YAAAE,QAAA,eAC/BN,OAAA;cAAKO,GAAG,EAAEL,IAAI,CAACM,KAAM;cAACC,GAAG,EAAEP,IAAI,CAACQ;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACNd,OAAA;YAAKI,SAAS,EAAC,iBAAiB;YAAAE,QAAA,eAC9BN,OAAA;cAAAM,QAAA,GAAKJ,IAAI,CAACa,OAAO,EAAC,UAAQ;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNd,OAAA;UAAII,SAAS,EAAC,aAAa;UAAAE,QAAA,EAAEJ,IAAI,CAACQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAEV;MACE,OAAO,IAAI;EACf;AACF,CAAC;AAACE,EAAA,GAnBIf,IAAI;AAqBV,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}