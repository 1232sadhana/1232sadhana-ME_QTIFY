{"ast":null,"code":"import axios from \"axios\";\nlet BackEndPoint = `https://qtify-backend-labs.crio.do/`;\nexport const getUId = () => {\n  let id = Math.random().toString(36).substr(3, 9);\n  return id;\n};\n\n/**\n * Fetches data for top albums.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const topAlbumData = async () => {\n  try {\n    let res = await axios.get(`${BackEndPoint}albums/top`);\n    // console.log(res)\n    return res.data;\n  } catch (e) {\n    console.log(`error from AxiosData Component ->`, e);\n    return null;\n  }\n};\n\n/**\n * Fetches data for new albums.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const newAlbumData = async () => {\n  try {\n    let res = await axios.get(`${BackEndPoint}albums/new`);\n    return res.data;\n  } catch (e) {\n    console.log(`error from AxiosData Component ->`, e);\n    return null;\n  }\n};\n\n/**\n * Fetches data for a specific album identified by its slug.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const slugAlbumData = async () => {\n  try {\n    let res = await axios.get(`${BackEndPoint}albums/:slug`);\n    return res.data;\n  } catch (e) {\n    console.log(`error from AxiosData Component ->`, e);\n    return null;\n  }\n};\n\n/**\n * Fetches data for genres.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const genresData = async () => {\n  try {\n    let res = await axios.get(`${BackEndPoint}genres`);\n    return res.data;\n  } catch (e) {\n    console.log(`error from AxiosData Component ->`, e);\n    return null;\n  }\n};\n\n/**\n * Fetches data for songs.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const songsData = async () => {\n  try {\n    let res = await axios.get(`${BackEndPoint}songs`);\n    return res.data;\n  } catch (e) {\n    console.log(`error from AxiosData Component ->`, e);\n    return null;\n  }\n};\n\n/**\n * Fetches data for frequently asked questions (FAQ).\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const faqData = async () => {\n  try {\n    let res = await axios.get(`${BackEndPoint}faq`);\n    return res.data;\n  } catch (e) {\n    console.log(`error from AxiosData Component ->`, e);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","BackEndPoint","getUId","id","Math","random","toString","substr","topAlbumData","res","get","data","e","console","log","newAlbumData","slugAlbumData","genresData","songsData","faqData"],"sources":["/workspaces/1232sadhana-ME_QTIFY/src/components/AxiosData/AxiosData.jsx"],"sourcesContent":["import axios from \"axios\";\nlet BackEndPoint = `https://qtify-backend-labs.crio.do/`;\n\nexport const getUId = () => {\n    let id = Math.random().toString(36).substr(3, 9);\n    return id;\n  };\n\n/**\n * Fetches data for top albums.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const topAlbumData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}albums/top`);\n        // console.log(res)\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for new albums.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const newAlbumData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}albums/new`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for a specific album identified by its slug.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const slugAlbumData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}albums/:slug`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for genres.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const genresData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}genres`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for songs.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const songsData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}songs`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for frequently asked questions (FAQ).\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const faqData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}faq`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,IAAIC,YAAY,GAAI,qCAAoC;AAExD,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACxB,IAAIC,EAAE,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EAChD,OAAOJ,EAAE;AACX,CAAC;;AAEH;AACA;AACA;AACA;AACA,OAAO,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACA,IAAIC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAET,YAAa,YAAW,CAAC;IACtD;IACA,OAAOQ,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRC,OAAO,CAACC,GAAG,CAAE,mCAAkC,EAAEF,CAAC,CAAC;IACnD,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACA,IAAIN,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAET,YAAa,YAAW,CAAC;IACtD,OAAOQ,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRC,OAAO,CAACC,GAAG,CAAE,mCAAkC,EAAEF,CAAC,CAAC;IACnD,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACA,IAAIP,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAET,YAAa,cAAa,CAAC;IACxD,OAAOQ,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRC,OAAO,CAACC,GAAG,CAAE,mCAAkC,EAAEF,CAAC,CAAC;IACnD,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,IAAIR,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAET,YAAa,QAAO,CAAC;IAClD,OAAOQ,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRC,OAAO,CAACC,GAAG,CAAE,mCAAkC,EAAEF,CAAC,CAAC;IACnD,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACA,IAAIT,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAET,YAAa,OAAM,CAAC;IACjD,OAAOQ,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRC,OAAO,CAACC,GAAG,CAAE,mCAAkC,EAAEF,CAAC,CAAC;IACnD,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMO,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACA,IAAIV,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAET,YAAa,KAAI,CAAC;IAC/C,OAAOQ,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRC,OAAO,CAACC,GAAG,CAAE,mCAAkC,EAAEF,CAAC,CAAC;IACnD,OAAO,IAAI;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}