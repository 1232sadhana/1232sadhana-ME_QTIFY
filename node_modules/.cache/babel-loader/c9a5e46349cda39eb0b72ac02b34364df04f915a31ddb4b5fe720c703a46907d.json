{"ast":null,"code":"import axios from\"axios\";let BackEndPoint=\"https://qtify-backend-labs.crio.do/\";export const getUId=()=>{let id=Math.random().toString(36).substr(3,9);return id;};/**\n * Fetches data for top albums.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */export const topAlbumData=async()=>{try{let res=await axios.get(\"\".concat(BackEndPoint,\"albums/top\"));// console.log(res)\nreturn res.data;}catch(e){console.log(\"error from AxiosData Component ->\",e);return null;}};/**\n * Fetches data for new albums.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */export const newAlbumData=async()=>{try{let res=await axios.get(\"\".concat(BackEndPoint,\"albums/new\"));return res.data;}catch(e){console.log(\"error from AxiosData Component ->\",e);return null;}};/**\n * Fetches data for a specific album identified by its slug.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */export const slugAlbumData=async()=>{try{let res=await axios.get(\"\".concat(BackEndPoint,\"albums/:slug\"));return res.data;}catch(e){console.log(\"error from AxiosData Component ->\",e);return null;}};/**\n * Fetches data for genres.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */export const genresData=async()=>{try{let res=await axios.get(\"\".concat(BackEndPoint,\"genres\"));return res.data;}catch(e){console.log(\"error from AxiosData Component ->\",e);return null;}};/**\n * Fetches data for songs.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */export const songsData=async()=>{try{let res=await axios.get(\"\".concat(BackEndPoint,\"songs\"));return res.data;}catch(e){console.log(\"error from AxiosData Component ->\",e);return null;}};/**\n * Fetches data for frequently asked questions (FAQ).\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */export const faqData=async()=>{try{let res=await axios.get(\"\".concat(BackEndPoint,\"faq\"));return res.data;}catch(e){console.log(\"error from AxiosData Component ->\",e);return null;}};","map":{"version":3,"names":["axios","BackEndPoint","getUId","id","Math","random","toString","substr","topAlbumData","res","get","concat","data","e","console","log","newAlbumData","slugAlbumData","genresData","songsData","faqData"],"sources":["/workspaces/1232sadhana-ME_QTIFY/src/components/AxiosData/AxiosData.jsx"],"sourcesContent":["import axios from \"axios\";\nlet BackEndPoint = `https://qtify-backend-labs.crio.do/`;\n\nexport const getUId = () => {\n    let id = Math.random().toString(36).substr(3, 9);\n    return id;\n  };\n\n/**\n * Fetches data for top albums.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const topAlbumData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}albums/top`);\n        // console.log(res)\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for new albums.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const newAlbumData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}albums/new`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for a specific album identified by its slug.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const slugAlbumData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}albums/:slug`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for genres.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const genresData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}genres`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for songs.\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const songsData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}songs`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};\n\n/**\n * Fetches data for frequently asked questions (FAQ).\n * @returns {Promise} A Promise that resolves to the response data if successful, or null if an error occurs.\n */\nexport const faqData = async () => {\n    try {\n        let res = await axios.get(`${BackEndPoint}faq`);\n        return res.data;\n    } catch (e) {\n        console.log(`error from AxiosData Component ->`, e);\n        return null;\n    }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}